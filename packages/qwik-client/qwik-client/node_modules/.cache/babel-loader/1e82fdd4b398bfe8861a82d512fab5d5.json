{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrumbholz/OneDrive/development/qwik-blog/packages/qwik-client/qwik-client/src/components/AuthenticatedRoute/AuthenticatedRoute.tsx\";\nimport React from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport LoginButton from '../LoginButton/LoginButton';\n\nconst AuthenticatedRoute = ({\n  component: Component,\n  path,\n  ...rest\n}) => {\n  const getCookie = cname => {\n    //gets cookie of given type\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n\n    return \"\";\n  };\n\n  let auth = getCookie(\"auth\");\n\n  if (!auth || auth === 'false') {\n    const {\n      isAuthenticated\n    } = useAuth0();\n    document.cookie = `auth = ${isAuthenticated}`;\n    document.cookie = `timestamp = ${Date.now()}`;\n  }\n\n  return getCookie(\"auth\") === \"true\" ? /*#__PURE__*/React.createElement(Component, Object.assign({}, rest, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 43\n    }\n  })) : /*#__PURE__*/React.createElement(LoginButton, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 68\n    }\n  });\n};\n\nexport default AuthenticatedRoute;","map":{"version":3,"sources":["/Users/ryankrumbholz/OneDrive/development/qwik-blog/packages/qwik-client/qwik-client/src/components/AuthenticatedRoute/AuthenticatedRoute.tsx"],"names":["React","useAuth0","LoginButton","AuthenticatedRoute","component","Component","path","rest","getCookie","cname","name","decodedCookie","decodeURIComponent","document","cookie","ca","split","i","length","c","charAt","substring","indexOf","auth","isAuthenticated","Date","now"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,oBAAzB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;;AAEA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,SAAS,EAAEC,SAAZ;AAAuBC,EAAAA,IAAvB;AAA6B,KAAGC;AAAhC,CAAD,KAAgD;AAEvE,QAAMC,SAAS,GAAIC,KAAD,IAAmB;AACjC;AACA,QAAIC,IAAI,GAAGD,KAAK,GAAG,GAAnB;AACA,QAAIE,aAAa,GAAGC,kBAAkB,CAACC,QAAQ,CAACC,MAAV,CAAtC;AACA,QAAIC,EAAE,GAAGJ,aAAa,CAACK,KAAd,CAAoB,GAApB,CAAT;;AACA,SAAI,IAAIC,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAEF,EAAE,CAACG,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAChC,UAAIE,CAAC,GAAGJ,EAAE,CAACE,CAAD,CAAV;;AACA,aAAOE,CAAC,CAACC,MAAF,CAAS,CAAT,KAAe,GAAtB,EAA2B;AACzBD,QAAAA,CAAC,GAAGA,CAAC,CAACE,SAAF,CAAY,CAAZ,CAAJ;AACD;;AACD,UAAIF,CAAC,CAACG,OAAF,CAAUZ,IAAV,KAAmB,CAAvB,EAA0B;AACxB,eAAOS,CAAC,CAACE,SAAF,CAAYX,IAAI,CAACQ,MAAjB,EAAyBC,CAAC,CAACD,MAA3B,CAAP;AACD;AACF;;AACD,WAAO,EAAP;AACD,GAfH;;AAiBA,MAAIK,IAAI,GAAGf,SAAS,CAAC,MAAD,CAApB;;AAEA,MAAI,CAACe,IAAD,IAASA,IAAI,KAAK,OAAtB,EAA+B;AAC3B,UAAM;AAAEC,MAAAA;AAAF,QAAsBvB,QAAQ,EAApC;AACAY,IAAAA,QAAQ,CAACC,MAAT,GAAmB,UAASU,eAAgB,EAA5C;AACAX,IAAAA,QAAQ,CAACC,MAAT,GAAmB,eAAcW,IAAI,CAACC,GAAL,EAAW,EAA5C;AACH;;AAED,SAAOlB,SAAS,CAAC,MAAD,CAAT,KAAsB,MAAtB,gBAA+B,oBAAC,SAAD,oBAAeD,IAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA/B,gBAAwD,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA/D;AACH,CA5BD;;AA8BA,eAAeJ,kBAAf","sourcesContent":["import React from 'react';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport LoginButton from '../LoginButton/LoginButton';\n\nconst AuthenticatedRoute = ({component: Component, path, ...rest}: any) => {\n\n    const getCookie = (cname: string) => {\n        //gets cookie of given type\n        var name = cname + \"=\";\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var ca = decodedCookie.split(';');\n        for(var i = 0; i <ca.length; i++) {\n          var c = ca[i];\n          while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n          }\n          if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n          }\n        }\n        return \"\";\n      }\n\n    let auth = getCookie(\"auth\");\n\n    if (!auth || auth === 'false') {\n        const { isAuthenticated } = useAuth0();\n        document.cookie = `auth = ${isAuthenticated}`;\n        document.cookie = `timestamp = ${Date.now()}`\n    }\n    \n    return getCookie(\"auth\") === \"true\" ? <Component {...rest}/> : <LoginButton/>;\n}\n\nexport default AuthenticatedRoute;"]},"metadata":{},"sourceType":"module"}