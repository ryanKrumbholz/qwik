{"ast":null,"code":"var _jsxFileName = \"/Users/ryankrumbholz/OneDrive/development/qwik-blog/packages/qwik-client/qwik-client/src/components/EditorHome/EditorHome.tsx\";\nimport React, { useState } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/nav';\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Navigation from '../Navigation/Navigation';\nimport LogoutButton from \"../LogoutButton/LogoutButton\";\nimport BlogCards from \"../BlogCards/BlogCards\";\n\nconst EditorHome = props => {\n  const getCookie = cname => {\n    //gets cookie of given type\n    var name = cname + \"=\";\n    var decodedCookie = decodeURIComponent(document.cookie);\n    var ca = decodedCookie.split(';');\n\n    for (var i = 0; i < ca.length; i++) {\n      var c = ca[i];\n\n      while (c.charAt(0) == ' ') {\n        c = c.substring(1);\n      }\n\n      if (c.indexOf(name) == 0) {\n        return c.substring(name.length, c.length);\n      }\n    }\n\n    return \"\";\n  };\n\n  const {\n    isAuthenticated,\n    user\n  } = useAuth0();\n  const auth = getCookie(\"auth\");\n  const [name, setName] = useState(\"\");\n\n  if (!auth || auth === 'false') {\n    //checking if cookie exist or is false then setting cookie after successful login\n    document.cookie = `auth = ${isAuthenticated}`;\n    document.cookie = `timestamp = ${Date.now()}`;\n  }\n\n  if (isAuthenticated && name === \"\") document.cookie = `name= ${user.name}`; //to prevent name cookie from being undefined; sets name cookie after successful login\n\n  if (name === \"\") setName(getCookie('name')); //to prevent infinite re-renders; only changes state if setName is an empty string.\n\n  const getNavContents = {\n    contents: [/*#__PURE__*/React.createElement(Nav.Link, {\n      disabled: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }\n    }, \"Hello \", name, \"!\"), /*#__PURE__*/React.createElement(Nav.Link, {\n      href: \"mailto:krumbholz98@gmail.com\",\n      target: \"_blank\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }\n    }, \"Contact\"), /*#__PURE__*/React.createElement(LogoutButton, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    })]\n  };\n\n  const setID = () => {\n    contents: {\n      props.rest;\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(Container, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Navigation, Object.assign({}, getNavContents, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 21\n    }\n  })))), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(BlogCards, Object.assign({}, setID, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 21\n    }\n  })))));\n};\n\nexport default EditorHome;","map":{"version":3,"sources":["/Users/ryankrumbholz/OneDrive/development/qwik-blog/packages/qwik-client/qwik-client/src/components/EditorHome/EditorHome.tsx"],"names":["React","useState","Container","Row","Col","Nav","useAuth0","Navigation","LogoutButton","BlogCards","EditorHome","props","getCookie","cname","name","decodedCookie","decodeURIComponent","document","cookie","ca","split","i","length","c","charAt","substring","indexOf","isAuthenticated","user","auth","setName","Date","now","getNavContents","contents","setID","rest"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/nav'\nimport { useAuth0 } from \"@auth0/auth0-react\";\nimport Navigation from '../Navigation/Navigation';\nimport LogoutButton from \"../LogoutButton/LogoutButton\";\nimport BlogCards from \"../BlogCards/BlogCards\";\n\nconst EditorHome = (props: any) => {\n\n    const getCookie = (cname: string) => {\n        //gets cookie of given type\n        var name = cname + \"=\";\n        var decodedCookie = decodeURIComponent(document.cookie);\n        var ca = decodedCookie.split(';');\n        for(var i = 0; i <ca.length; i++) {\n          var c = ca[i];\n          while (c.charAt(0) == ' ') {\n            c = c.substring(1);\n          }\n          if (c.indexOf(name) == 0) {\n            return c.substring(name.length, c.length);\n          }\n        }\n        return \"\";\n      }\n\n    const { isAuthenticated, user } = useAuth0();\n    const auth = getCookie(\"auth\");\n    const [name, setName] = useState(\"\");\n\n    if (!auth || auth === 'false') {\n        //checking if cookie exist or is false then setting cookie after successful login\n        document.cookie = `auth = ${isAuthenticated}`;\n        document.cookie = `timestamp = ${Date.now()}`\n    }\n\n    if (isAuthenticated && name === \"\") document.cookie = `name= ${user.name}`;\n    //to prevent name cookie from being undefined; sets name cookie after successful login\n\n\n    if ( name === \"\") setName(getCookie('name')); \n    //to prevent infinite re-renders; only changes state if setName is an empty string.\n\n    const getNavContents = {\n        contents: [\n                <Nav.Link disabled>Hello {name}!</Nav.Link>,\n                <Nav.Link href=\"mailto:krumbholz98@gmail.com\" target=\"_blank\">Contact</Nav.Link>,\n                <LogoutButton/>\n            ]\n    }\n\n    const setID = () => {\n        contents: {props.rest}\n    }\n\n    return (\n        <Container>\n            <Row>\n                <Col>\n                    <Navigation {...getNavContents}/>\n                </Col>\n            </Row>\n            <Row>\n                <Col>\n                    <BlogCards {...setID}/>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default EditorHome;"]},"metadata":{},"sourceType":"module"}